//
//  ListOrdersInteractorTests.swift
//  LearningCleanSwift
//
//  Created by MatÃ­as Elorriaga on 11/11/16.
//  Copyright (c) 2016 melorriaga. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import LearningCleanSwift

import XCTest

class ListOrdersInteractorTests: XCTestCase {
    
    // MARK: - Subject under test
    
    var sut: ListOrdersInteractor!
    
    // MARK: - Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupListOrdersInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: - Test setup
    
    func setupListOrdersInteractor() {
        sut = ListOrdersInteractor()
    }
    
    // MARK: - Test doubles
    
    class ListOrdersInteractorOutputSpy: ListOrdersInteractorOutput {
        
        var presentFetchedOrdersCalled = false
        
        func presentFetchedOrders(response: ListOrders.FetchOrders.Response) {
            presentFetchedOrdersCalled = true
        }
        
    }
    
    class OrdersWorkerSpy: OrdersWorker {
        
        var fetchOrdersCalled = false
        
        override func fetchOrders(completionHandler: @escaping ([Order]) -> Void) {
            fetchOrdersCalled = true
            completionHandler([])
        }
        
    }
    
    // MARK: - Tests
    
    func testFetchOrdersShouldAskOrdersWorkerToFetchOrdersAndPresenterToFormatResult() {
        // given
        let listOrdersInteractorOutputSpy = ListOrdersInteractorOutputSpy()
        sut.output = listOrdersInteractorOutputSpy
        let ordersWorkerSpy = OrdersWorkerSpy(ordersStore: OrdersMemStore())
        sut.ordersWorker = ordersWorkerSpy
        
        // when
        let request = ListOrders.FetchOrders.Request()
        sut.fetchOrders(request: request)
        
        // then
        XCTAssert(ordersWorkerSpy.fetchOrdersCalled)
        XCTAssert(listOrdersInteractorOutputSpy.presentFetchedOrdersCalled)
    }
    
}

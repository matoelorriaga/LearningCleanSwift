//
//  CreateOrderInteractorTests.swift
//  LearningCleanSwift
//
//  Created by Mat√≠as Elorriaga on 10/11/16.
//  Copyright (c) 2016 melorriaga. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import LearningCleanSwift

import XCTest

class CreateOrderInteractorTests: XCTestCase {
    
    // MARK: - Subject under test
    
    var sut: CreateOrderInteractor!
    
    // MARK: - Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupCreateOrderInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: - Test setup
    
    func setupCreateOrderInteractor() {
        sut = CreateOrderInteractor()
    }
    
    // MARK: - Test doubles
    
    class CreateOrderInteractorOutputSpy: CreateOrderInteractorOutput {
        
        var presentExpirationDateCalled = false
        
        func presentExpirationDate(response: CreateOrder.FormatExpirationDate.Response) {
            presentExpirationDateCalled = true
        }
        
    }
    
    // MARK: - Tests
    
    func testShippingMethodsShouldReturnAllAvailableShippingMethods() {
        // given
        let allAvailableShippingMethods = [
            "Standard Shipping",
            "Two-Day Shipping",
            "One-Day Shipping"
        ]
        
        // when
        let returnedShippingMethods = sut.shippingMethods
        
        // then
        XCTAssertEqual(returnedShippingMethods, allAvailableShippingMethods)
    }
    
    func testFormatExpirationDateShouldAskPresenterToFormatExpirationDate() {
        // given
        let createOrderInteractorOutputSpy = CreateOrderInteractorOutputSpy()
        sut.output = createOrderInteractorOutputSpy
        
        let request = CreateOrder.FormatExpirationDate.Request(date: Date())
        
        // when
        sut.formatExpirationDate(request: request)
        
        // then
        XCTAssert(createOrderInteractorOutputSpy.presentExpirationDateCalled)
    }
    
}

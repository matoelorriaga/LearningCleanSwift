//
//  OrdersWorkerTests.swift
//  LearningCleanSwift
//
//  Created by MatÃ­as Elorriaga on 11/11/16.
//  Copyright (c) 2016 melorriaga. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import LearningCleanSwift

import XCTest

class OrdersWorkerTests: XCTestCase {
    
    // MARK: - Subject under test
    
    var sut: OrdersWorker!
    
    // MARK: - Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupOrdersWorker()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: - Test setup
    
    func setupOrdersWorker() {
        sut = OrdersWorker(ordersStore: OrdersMemStoreSpy())
    }
    
    // MARK: - Test doubles
    
    class OrdersMemStoreSpy: OrdersMemStore {
        
        var fetchOrdersCalled = false
        
        override func fetchOrders(completionHandler: @escaping ([Order]) -> Void) {
            fetchOrdersCalled = true
            DispatchQueue.main.asyncAfter(deadline: .now() + .seconds(1)) {
                completionHandler([Order(), Order(), Order()])
            }
        }
        
    }
    
    // MARK: - Tests
    
    func testFetchOrdersShouldReturnListOfOrders() {
        // given
        let ordersMemStoreSpy = sut.ordersStore as! OrdersMemStoreSpy
        
        // when
        let expect = expectation(description: "ordersStore.fetchOrders:")
        sut.fetchOrders { orders in
            expect.fulfill()
        }
        
        // then
        XCTAssert(ordersMemStoreSpy.fetchOrdersCalled)
        waitForExpectations(timeout: 1.1, handler: { (error: Error?) -> Void in
            XCTAssert(true)
        })
    }
    
}

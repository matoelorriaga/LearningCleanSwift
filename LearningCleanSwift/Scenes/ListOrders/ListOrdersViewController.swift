//
//  ListOrdersViewController.swift
//  LearningCleanSwift
//
//  Created by MatÃ­as Elorriaga on 11/11/16.
//  Copyright (c) 2016 melorriaga. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ListOrdersViewControllerInput {
    func displayFetchedOrders(viewModel: ListOrders.FetchOrders.ViewModel)
}

protocol ListOrdersViewControllerOutput {
    func fetchOrders(request: ListOrders.FetchOrders.Request)
}

class ListOrdersViewController: UITableViewController, ListOrdersViewControllerInput {
    
    var output: ListOrdersViewControllerOutput!
    var router: ListOrdersRouter!
    
    var displayedOrders: [ListOrders.FetchOrders.ViewModel.DisplayedOrder] = []
    
    // MARK: - Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        ListOrdersConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: - UITableViewDataSource
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return displayedOrders.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let displayedOrder = displayedOrders[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: "OrderTableViewCell", for: indexPath)
        cell.textLabel?.text = displayedOrder.date
        cell.detailTextLabel?.text = displayedOrder.total
        return cell
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        fetchOrdersOnLoad()
    }
    
    // MARK: - Do something on load
    
    func fetchOrdersOnLoad() {
        let request = ListOrders.FetchOrders.Request()
        output.fetchOrders(request: request)
    }
    
    // MARK: - Display something
    
    func displayFetchedOrders(viewModel: ListOrders.FetchOrders.ViewModel) {
        displayedOrders = viewModel.displayedOrders
        tableView.reloadData()
    }
    
}

//
//  ListOrdersPresenter.swift
//  LearningCleanSwift
//
//  Created by Mat√≠as Elorriaga on 11/11/16.
//  Copyright (c) 2016 melorriaga. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ListOrdersPresenterInput {
    func presentFetchedOrders(response: ListOrders.FetchOrders.Response)
}

protocol ListOrdersPresenterOutput: class {
    func displayFetchedOrders(viewModel: ListOrders.FetchOrders.ViewModel)
}

class ListOrdersPresenter: ListOrdersPresenterInput {
    
    weak var output: ListOrdersPresenterOutput!
    
    let dateFormatter: DateFormatter = {
        let dateFormatter = DateFormatter()
        dateFormatter.dateStyle = .short
        dateFormatter.timeStyle = .none
        return dateFormatter
    }()
    let currencyConverter: NumberFormatter = {
        let currencyConverter = NumberFormatter()
        currencyConverter.numberStyle = .currency
        return currencyConverter
    }()
    
    // MARK: - Presentation logic
    
    func presentFetchedOrders(response: ListOrders.FetchOrders.Response) {
        var displayedOrders: [ListOrders.FetchOrders.ViewModel.DisplayedOrder] = []
        for order in response.orders {
            let date = dateFormatter.string(from: order.date!)
            let total = currencyConverter.string(from: NSNumber(floatLiteral: order.total!))
            let displayedOrder = ListOrders.FetchOrders.ViewModel.DisplayedOrder(id: String(order.id!), date: date, email: order.email!, name: "\(order.firstName!) \(order.lastName!)", total: total!)
            displayedOrders.append(displayedOrder)
        }
        let viewModel = ListOrders.FetchOrders.ViewModel(displayedOrders: displayedOrders)
        output.displayFetchedOrders(viewModel: viewModel)
    }
    
}
